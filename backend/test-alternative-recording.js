import axios from 'axios';

// Test configuration
const BASE_URL = 'https://blackkbingo.com';
const TEST_MEETING_ID = '87243734757'; // Use the meeting ID from your error

// Test the alternative recording endpoints
async function testAlternativeRecording() {
  console.log('üéØ Testing Alternative Zoom Recording API...\n');

  try {
    // Test 1: Health check
    console.log('1Ô∏è‚É£ Testing health check...');
    try {
      const healthResponse = await axios.get(`${BASE_URL}/health`);
      console.log('‚úÖ Health check passed:', healthResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è Health check failed (server might be down):', error.message);
    }
    console.log('');

    // Test 2: Check recording capabilities (requires auth)
    console.log('2Ô∏è‚É£ Testing recording capabilities...');
    try {
      const capabilitiesResponse = await axios.get(`${BASE_URL}/api/alternative-recorder/capabilities`);
      console.log('‚úÖ Capabilities response:', capabilitiesResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è Capabilities check failed (expected without auth):', error.response && error.response.data ? error.response.data : error.message);
    }
    console.log('');

    // Test 3: Get meeting info
    console.log('3Ô∏è‚É£ Testing meeting info...');
    try {
      const meetingResponse = await axios.get(`${BASE_URL}/api/alternative-recorder/meeting/${TEST_MEETING_ID}`);
      console.log('‚úÖ Meeting info response:', meetingResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è Meeting info failed (expected without auth):', error.response && error.response.data ? error.response.data : error.message);
    }
    console.log('');

    // Test 4: Start recording with alternative recorder
    console.log('4Ô∏è‚É£ Testing alternative recording start...');
    try {
      const startResponse = await axios.post(`${BASE_URL}/api/alternative-recorder/start/${TEST_MEETING_ID}`);
      console.log('‚úÖ Alternative recording start response:', startResponse.data);
    } catch (error) {
      console.log('‚ö†Ô∏è Alternative recording start failed (expected without auth):', error.response && error.response.data ? error.response.data : error.message);
    }
    console.log('');

    console.log('üéâ Alternative Recording API test completed!');
    console.log('\nüìù Solutions for the recording issue:');
    console.log('1. Upgrade Zoom account to Pro or higher for cloud recording');
    console.log('2. Enable local recording in Zoom account settings');
    console.log('3. Use the alternative recorder which tries multiple methods');
    console.log('4. The alternative recorder will track meetings even without recording');

  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
  }
}

// Run the test
testAlternativeRecording(); 